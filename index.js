const express = require("express");
const db = require("./function.js")
const port_const = 3000;
const app = express();
const cors = require('cors');

const corsOptions = {
	origin: '*',
	//credentials: true,            //access-control-allow-credentials:true
	optionSuccessStatus: 200

}

app.use(cors(corsOptions))
app.use(express.json())

function is_data_defined(data) {
	return data !== undefined;
}

function all_data_recieved(data) {
	let state = true;
	for (prop in data) {
		let tmp = is_data_defined(prop);
		state = state && tmp;				//if any data undefined -> state=false
	}
	return state;
}

function any_data_recieved(data) {
	let state = false;
	for (prop in data) {
		let tmp = is_data_defined(prop);
		state = state || tmp;
	}
	return state;
}

async function get_filtered_items(data) {
	let res;
	switch (data) {
		case data.name !== undefined:
			res = await db.filter_by_name(data.name)
			break;
		case data.article !== undefined:
			res = await db.filter_by_article(data.article)
			break;
		case data.data_creating !== undefined:
			res = await db.filter_by_data_creating(data.data_creating)
			break;
		case data.expiration_date !== undefined:
			res = await db.filter_by_expiration_date(data.expiration_date)
			break;
		case data.data_shop:
			res = await db.filter_by_data_shop(data.data_shop)

	}
	return res
}

function get_json_data(req) {
	let data = {};
	//data.id = req.body.product.id; // auto-generated by (server?) - not available now
	data.id = 5;
	data.product_name = req.body.product_name;
	data.creator_name = req.body.creator_name;
	data.article = req.body.article;
	data.count = req.body.count;
	data.manufacture_date = req.body.manufacture_date;
	data.expiry_date = req.body.expiry_date;
	data.arrival_date = req.body.arrival_date;
	return data;
}

app.get("/", (req, res) => {
	res.send({ DEBUG: "root, no any practical-sense here" });
});

//when product sold, send request to the server (update product data)
app.post("/delete_product", async (req, res) => {
	let data = get_json_data(req);
	if (all_data_recieved(data)) {
		//await db.delete_product(data)
		console.log(data)
		res.send({ req: 0 });	//all ended successfully
	}
});

//new product type creating
app.post("/add_product", async (req, res) => {
	let data = get_json_data(req);
	if (all_data_received(data)) {
		//await db.add_product(data)
		console.log(data);
		res.send({ req: 0 });	//all ended successfully
	}
});

//get any data by filter (is date expired)
app.post("/filter_products", async (req, res) => {
	data = get_json_data(req);
	if (any_data_recieved(data)) {
		let results = await get_filtered_items(data)
		res.send(results);
	}
});

//get all products
app.post("/get_all_products", async (req, res) => {
	let tmp_data = {
		id: 1977354,
		product_name: "Coca-Cola",
		creator_name: "Dobriy",
		count: 96,
		article: "QWEFDGNBMRF",
		manufacture_date: "19.08.2020",
		expiry_date: "19.08.2024",
		arrival_date: "11.11.2022"
	}
	let tmp_data2 = {
		id: 1923453,
		product_name: "Borodinski Hleb",
		creator_name: "Borodinsky",
		count: 30,
		article: "FTMPLJJDDS",
		manufacture_date: "19.10.2022",
		expiry_date: "19.11.2022",
		arrival_date: "22.10.2022"
	}
	let result = [tmp_data, tmp_data2]
	//let results = await db.get_products()
	res.send({result});

});


result = []
function get_requests_by_state(requests, state)
{
	
	for(prop in requests)
	{
		if(requests[prop].status == state)
		{
			result.push(requests[prop])
			
		}
		console.log(requests[prop].status)
		console.log(prop)
	}
	return result
}

// ###############################
// WARNING: GLOBAL ARRAY VAR USED
let requests = []
app.post("/get_requests", async (req, res) => {
	//let requests = await db.input_history_requests(req.body.state)
	console.log(req.body.state)
	console.log(requests)
	get_requests_by_state(requests, req.body.state)
	console.log(result)
	res.send({results: result});
	result = []
});

app.post("/send_request", async (req, res) => {
	let data = {
		sender: req.body.sender,
		request_date: new Date(),
		status: req.body.status,
		product: req.body.product

	}
	console.log(data)
	requests.push(data) //change -> bd request to append
	res.end()
})
// GLOBAL ARRAY USING END
//#####################################

//listening on port, main server
app.listen(port_const, () => {
	console.log("port " + port_const + " active");
})
